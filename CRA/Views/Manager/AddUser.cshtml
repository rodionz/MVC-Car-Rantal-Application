@model CarRental.MVC.Models.UserViewModel


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Add New User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "FirstName form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "LastName form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

      






        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                
                @Html.EnumDropDownListFor(model => model.gender, "Select Gender", new { @class = "Gender form-control" })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.BirthData, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.BirthData, new { htmlAttributes = new { @class = "BirthData form-control", id = "datepicker2" } })
                @Html.ValidationMessageFor(model => model.BirthData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "Email form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName , htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "Username form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "Password form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-5">
                <input type="button" value="Create" class="submiting btn btn-primary" />  <input type="button" value="Cancel" class="btn btn-danger cancel" />
            </div>
        </div>
    </div>
}


<script>
    $(function () {
        $("#datepicker2").datepicker({
            dateFormat: "dd/mm/yy",        
            changeYear: true
        });

    })

</script>

<script src="~/Scripts/ScriptLibriaries/jquery.validate.min.js"></script>
<script src="~/Scripts/ScriptLibriaries/jquery.validate.unobtrusive.min.js"></script>


