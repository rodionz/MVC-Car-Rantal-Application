@model CarRental.MVC.Models.CarViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Car</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID, new {@class = "carID" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModelID, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.ModelID, new { htmlAttributes = new { @class = "Model form-control" } })
                @Html.ValidationMessageFor(model => model.ModelID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.BranchID, new { htmlAttributes = new { @class = "Branch form-control" } })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CarNumber, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.CarNumber, new { htmlAttributes = new { @class = "CarNumber form-control" } })
                @Html.ValidationMessageFor(model => model.CarNumber, "", new { @class = "text-danger" })
            </div>
        </div>    
        <div class="form-group">
            @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "Mileage form-control" } })
                @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProperState, htmlAttributes: new { @class = "control-label  col-sm-2 col-sm-offset-2" })
            <div class="col-sm-8">
                <div class="checkbox-inline">
                    @Html.EditorFor(model => model.ProperState, new { htmlAttributes = new { @class = "properState form-control" } })
                    @Html.ValidationMessageFor(model => model.ProperState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-5">
                <input type="button" value="Save" class="btn btn-primary" id="submitEditCar" />  <input type="button" value="Cancel" class="btn btn-danger cancel" />
            </div>
        </div>
    </div>
}

<script src="~/Scripts/ScriptLibriaries/jquery.validate.min.js"></script>
<script src="~/Scripts/ScriptLibriaries/jquery.validate.unobtrusive.min.js"></script>